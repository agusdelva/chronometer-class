{"version":3,"sources":["components/chronometer.js","App.js","index.js"],"names":["Chronometer","state","hours","minutes","seconds","miliseconds","running","allTimeStamps","started","handleStartClick","interval","setInterval","tick","setState","handleStopClick","clearInterval","handleTimestamp","timeStamp","timeStamps","push","handleReset","updateTimer","this","value","addZero","className","disabled","onClick","map","idx","id","Component","App","ReactDOM","render","document","getElementById"],"mappings":"wRAgIeA,E,4MAzHXC,MAAQ,CACJC,MAAM,EACNC,QAAQ,EACRC,QAAQ,EACRC,YAAY,EACZC,SAAS,EACTC,cAAe,GACfC,SAAS,G,EAIbC,iBAAmB,WACX,EAAKR,MAAMK,UACX,EAAKI,SAAWC,aAAY,WACxB,EAAKC,SACP,KAEF,EAAKC,SAAS,CAACP,SAAS,EAAKE,SAAS,M,EAgC9CM,gBAAkB,WACX,EAAKb,MAAMK,UACVS,cAAc,EAAKL,UACnB,EAAKG,SAAS,CAACP,SAAS,M,EAKhCU,gBAAkB,WAAO,IAAD,EACsC,EAAKf,MAE3DgB,EAAW,CAACf,MAHI,EACdA,MAEgBC,QAHF,EACRA,QAEkBC,QAHV,EACAA,QAEkBC,YAHlB,EACQA,aAIxBa,EALgB,EACqBX,cAM3CW,EAAWC,KAAKF,GAEhB,EAAKJ,SAAS,CAACN,cAAcW,K,EAI/BE,YAAc,WACV,EAAKC,YAAY,EAAG,EAAG,EAAG,GAC1B,EAAKR,SAAS,CAACN,cAAe,GAAIC,SAAS,K,qDAjD3C,IAAIN,EAAQoB,KAAKrB,MAAMC,MACnBC,EAAUmB,KAAKrB,MAAME,QACrBC,EAAUkB,KAAKrB,MAAMG,QACrBC,EAAciB,KAAKrB,MAAMI,YAAc,EAExB,KAAhBA,IACCA,EAAc,EACdD,GAAoB,GAGR,KAAZA,IACAA,EAAU,EACVD,GAAoB,GAGR,KAAZA,IACAA,EAAU,EACVD,GAAgB,GAGpBoB,KAAKD,YAAYhB,EAAaD,EAASD,EAASD,GAC5CoB,KAAKT,SAAS,CACVR,cAAaD,UAASD,UAASD,Y,kCA+B/BG,EAAaD,EAASD,EAASD,GACvCoB,KAAKT,SAAS,CACVR,cAAaD,UAASD,UAASD,Y,8BAI/BqB,GACJ,OAAOA,EAAQ,GAAR,WAAgBA,GAAUA,I,+BAG3B,IAAD,SAC6DD,KAAKrB,MAAlEC,EADA,EACAA,MAAMC,EADN,EACMA,QAAQC,EADd,EACcA,QAAQC,EADtB,EACsBA,YAAaC,EADnC,EACmCA,QAASC,EAD5C,EAC4CA,cAKjD,OAJAL,EAAQoB,KAAKE,QAAQtB,GACrBC,EAAUmB,KAAKE,QAAQrB,GACvBC,EAAUkB,KAAKE,QAAQpB,GACvBC,EAAciB,KAAKE,QAAQnB,GAEvB,qBAAKoB,UAAU,aAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,uCAAQvB,EAAR,cAAmBC,EAAnB,cAAgCC,EAAhC,cAA6CC,KAC7C,sBAAKoB,UAAU,eAAf,UACI,wBAAQA,UAAU,SAASC,SAAUpB,EAASqB,QAASL,KAAKb,iBAA5D,mBACA,wBAAQgB,UAAU,SAASC,UAAWpB,EAASqB,QAASL,KAAKR,gBAA7D,kBACA,wBAAQW,UAAU,SAASC,UAAWpB,EAASqB,QAASL,KAAKN,gBAA7D,mBACEM,KAAKrB,MAAMO,SAAW,wBAAQiB,UAAU,SAASC,SAAUpB,EAASqB,QAASL,KAAKF,YAA5D,sBAE5B,oBAAIK,UAAU,QAAd,SACKlB,EAAcqB,KAAI,SAACX,EAAWY,GAAZ,OACf,oBAAIJ,UAAU,aAAd,qDAEMI,EAAM,EAFZ,+CAGM,EAAKL,QAAQP,EAAUf,OAH7B,+CAIM,EAAKsB,QAAQP,EAAUd,SAJ7B,+CAKM,EAAKqB,QAAQP,EAAUb,SAL7B,+CAMM,EAAKoB,QAAQP,EAAUZ,aAN7B,wCAAgCyB,oC,GA1GlCC,aCYXC,E,uKAVP,OACI,gCACI,6CACA,cAAC,EAAD,W,GANED,aCElBE,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.0196ba37.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './chronometer.css'\r\n\r\nimport {generate as id} from 'shortid'\r\n\r\nclass Chronometer extends Component {\r\n\r\n    state = {\r\n        hours:0,\r\n        minutes:0,\r\n        seconds:0,\r\n        miliseconds:0,\r\n        running: false,\r\n        allTimeStamps: [],\r\n        started: false\r\n    }\r\n\r\n    //Función que se llama con el boton start\r\n    handleStartClick = () => {\r\n        if(!this.state.running){\r\n            this.interval = setInterval(()=> {\r\n                this.tick()\r\n            },100)\r\n\r\n            this.setState({running: true,started: true})\r\n        }\r\n    }\r\n\r\n    //Conteo del cronómetro\r\n    tick() {\r\n        let hours = this.state.hours\r\n        let minutes = this.state.minutes\r\n        let seconds = this.state.seconds\r\n        let miliseconds = this.state.miliseconds + 1\r\n\r\n        if(miliseconds === 10) {\r\n            miliseconds = 0\r\n            seconds = seconds + 1\r\n        }\r\n\r\n        if( seconds === 60) {\r\n            seconds = 0\r\n            minutes = minutes + 1\r\n        }\r\n\r\n        if( minutes === 60) {\r\n            minutes = 0\r\n            hours = hours + 1\r\n        }\r\n\r\n        this.updateTimer(miliseconds, seconds, minutes, hours)\r\n            this.setState({\r\n                miliseconds, seconds, minutes, hours\r\n            })\r\n    }\r\n    //Función que se llama con el boton stop\r\n    handleStopClick = () => {\r\n        if(this.state.running){\r\n            clearInterval(this.interval)\r\n            this.setState({running: false})\r\n        }\r\n    }\r\n\r\n    //Función que se llama con el boton timestamp\r\n    handleTimestamp = () => {\r\n      const  {hours,minutes,seconds,miliseconds, allTimeStamps} = this.state\r\n\r\n      const timeStamp ={hours,minutes,seconds,miliseconds}\r\n\r\n      const timeStamps = allTimeStamps\r\n\r\n      timeStamps.push(timeStamp)\r\n\r\n      this.setState({allTimeStamps:timeStamps})\r\n    }\r\n\r\n    //Función que se llama con el boton reset\r\n    handleReset = () => {\r\n        this.updateTimer(0, 0, 0, 0)\r\n        this.setState({allTimeStamps: [], started: false})\r\n    }\r\n\r\n    //Función de actualización del estado\r\n    updateTimer(miliseconds, seconds, minutes, hours) {\r\n        this.setState({\r\n            miliseconds, seconds, minutes, hours\r\n        })\r\n    }\r\n\r\n    addZero(value){\r\n        return value < 10? `0${value}` : value\r\n    }\r\n\r\n    render() {\r\n        let {hours,minutes,seconds,miliseconds, running, allTimeStamps} = this.state\r\n        hours = this.addZero(hours)\r\n        minutes = this.addZero(minutes)\r\n        seconds = this.addZero(seconds)\r\n        miliseconds = this.addZero(miliseconds)\r\n        return (\r\n            <div className=\"caja-crono\">\r\n                <div className=\"caja-crono-hijo\">\r\n                    <h3>{`${hours} : ${minutes} : ${seconds} : ${miliseconds}`}</h3>\r\n                    <div className=\"caja-botones\">\r\n                        <button className=\"button\" disabled={running} onClick={this.handleStartClick}>Start</button>\r\n                        <button className=\"button\" disabled={!running} onClick={this.handleStopClick}>Stop</button>\r\n                        <button className=\"button\" disabled={!running} onClick={this.handleTimestamp}>Time </button>\r\n                        { this.state.started && <button className=\"button\" disabled={running} onClick={this.handleReset}>Reset</button>}\r\n                    </div>\r\n                    <ul className=\"lista\" >\r\n                        {allTimeStamps.map((timeStamp, idx)=> (\r\n                            <li className=\"lista-hijo\" key={id()}>\r\n                                {`\r\n                                ${idx + 1} -\r\n                                ${this.addZero(timeStamp.hours)} :\r\n                                ${this.addZero(timeStamp.minutes)} :\r\n                                ${this.addZero(timeStamp.seconds)} :\r\n                                ${this.addZero(timeStamp.miliseconds)} \r\n                                `}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chronometer;","import React, { Component } from 'react'\nimport './App.css'\nimport Chronometer from './components/chronometer.js'\n\nclass App extends Component {\n\n    render() {\n        return (\n            <div>\n                <h1>Chronometer</h1>\n                <Chronometer />\n            </div>\n        )\n    }\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n\n"],"sourceRoot":""}